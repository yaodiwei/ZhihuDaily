apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.tencent.tinker.patch'

//如果是作者自己，isYao为真，可以打正式包，正式包使用 ./private/ 文件夹下的签名和配置
//如果不是作者，debug模式可以用，release模式需要自己配置好相应的签名
boolean isYao = rootDir.toString() == "/Users/Yao/work/ZhihuDaily"
def config
if (isYao) {
    //读取一个路径为 ./private/config.properties 的文件，这是一个私有的文件
    //用于存放签名文件，或者一些第三方的key
    println(new File("./"))
    config = new ConfigSlurper().parse(new File("./private/config.properties").text)
    println config
}

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    defaultConfig {
        applicationId "com.yao.zhihudaily"
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    if (isYao) {
        signingConfigs {
            release {
                storeFile file('../private/yao.keystore')
                storePassword config.release_password
                keyAlias config.release_alias
                keyPassword config.release_password
                v2SigningEnabled false
            }
        }
    }

    buildTypes {
        release {
            if (isYao) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false //为true会导致tinker报错 https://github.com/Tencent/tinker/issues/1231
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        preRelease {
            if (isYao) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false //为true会导致tinker报错 https://github.com/Tencent/tinker/issues/1231
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

apply from: './tinker.gradle'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:$rootProject.ext.versions.junit"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.versions.constraintlayout"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.versions.recyclerview"
    implementation "androidx.cardview:cardview:$rootProject.ext.versions.cardview"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.versions.okhttp"
    implementation "com.google.code.gson:gson:$rootProject.ext.versions.gson"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.versions.glide"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.versions.rxjavaVersion"
    implementation "com.aurelhubert:ahbottomnavigation:$rootProject.ext.versions.ahbottomnavigation"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.versions.retrofit"
    implementation "com.orhanobut:logger:$rootProject.ext.versions.logger"
    implementation "com.yanzhenjie:permission:$rootProject.ext.versions.permission"
    implementation "com.alibaba:arouter-api:$rootProject.ext.versions.arouterApi"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.versions.arouterCompiler"
    implementation "org.greenrobot:eventbus:$rootProject.ext.versions.eventbus"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.ext.versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.versions.kotlinxCoroutinesAndroid"

    implementation "com.android.support:multidex:$rootProject.ext.versions.multidex"

    implementation "com.tencent.tinker:tinker-android-lib:$rootProject.ext.versions.tinker"
    //这里使用 1.9.14.7 会导致找不到DefaultLifeCycle类，SampleApplicationLike报错。被迫让整个tinker只能使用tinker。
    compileOnly "com.tencent.tinker:tinker-android-anno:$rootProject.ext.versions.tinker"
    //不加这句依赖，会报下面这个错
    //Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration.
    annotationProcessor "com.tencent.tinker:tinker-android-anno:$rootProject.ext.versions.tinker"

}
